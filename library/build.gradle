apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def githubProperties = new Properties()
githubProperties.load(new FileInputStream("$projectDir/../../services/github.properties"))

def getVersionName = { ->
    return "3.0.1"
}

def getArtifactId = { ->
    return "android-utilities"
}

android {

    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 301
        versionName getVersionName()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'edu.cnm.deepdive'
            artifactId getArtifactId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/library-release.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ddc-java/android-utilities")
            credentials {
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}

//task javadoc(type: Javadoc) {
//    failOnError = false
//    source = android.sourceSets.main.java.sourceFiles
//    classpath += files(android.getBootClasspath().join(File.pathSeparator))
//    options.links("https://docs.oracle.com/javase/7/docs/api/")
//    options.linksOffline("https://developer.android.com/reference", "$projectDir".toString())
//    title("Deep Dive Coding Android Utility Classes")
//    exclude '**/BuildConfig.java'
//    exclude '**/R.java'
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from "$projectDir/../docs/api"
}

task classesJar(type: Jar) {
    dependsOn ':library:compileReleaseJavaWithJavac'
    from "$projectDir/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}
